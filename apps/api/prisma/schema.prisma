generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

model Users {
  instanceId                  String?       @db.Uuid @map("instance_id")
  id                          String        @id @db.Uuid
  aud                         String?       @db.VarChar(255)
  role                        String?       @db.VarChar(255)
  email                       String?       @db.VarChar(255)
  encryptedPassword           String?       @db.VarChar(255) @map("encrypted_password")
  createdAt                   DateTime?     @db.Timestamptz(6) @map("created_at")
  updatedAt                   DateTime?     @db.Timestamptz(6) @map("updated_at")
  phone                       String?       @unique
  User                        User?

  @@index([instanceId])
  @@schema("auth")
}

model Post {
  postId        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid @map("post_id")
  authorId      String   @db.Uuid @map("author_id")
  content       String   @default("")
  creationDate  DateTime @default(now()) @db.Timestamp(6) @map("creation_date")
  isPosted      Boolean  @default(false) @map("is_posted")
  user          User     @relation(fields: [authorId], references: [userId], onDelete: Cascade)

  @@schema("public")
  @@map("post")
}

model User {
  userId     String  @id @db.Uuid @map("user_id")
  username   String  @db.VarChar 
  firstName  String  @db.VarChar @map("first_name")
  lastName   String? @db.VarChar @map("last_name")
  post       Post[]
  users      Users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("public")
  @@map("user")
}